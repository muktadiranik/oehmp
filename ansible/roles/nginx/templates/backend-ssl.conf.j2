upstream {{ application_name }}_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:{{ virtualenv_path }}/run/gunicorn.sock fail_timeout=0;
}

upstream {{ application_name }}_asgi_server {
  server 127.0.0.1:8000;
}

server {
    listen 80;
    listen 443 ssl http2;
    server_name {{ nginx_server_name }};

    ssl_certificate     {{ letsencrypt_dir }}/{{ letsencrypt_cert_filename }};
    ssl_certificate_key {{ letsencrypt_dir }}/{{ letsencrypt_privkey_filename }};


    # Terminate the request immediately if a request uses the IP address.
    # This stops Invalid HTTP_HOST header exceptions being raised by Django.

    if ($host !~* ^({{ nginx_server_name }})$ ) {
        return 444;
    }

    if ( $scheme = "http" ) {
       return 301 https://$host$request_uri;
    }

    # security headers
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Permissions-Policy "interest-cohort=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location /static/ {
        alias   {{ nginx_static_dir }};
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
    }

    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Proxy timeout
    proxy_send_timeout 1m;
    proxy_read_timeout 1m;
    proxy_connect_timeout 1m;

    location /ws {
        expires off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        proxy_pass http://{{ application_name }}_asgi_server;
        proxy_cache off;
    }

    location / {
        expires off;

        proxy_pass http://{{ application_name }}_wsgi_server;
        proxy_cache off;
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ backend_project_path }}/{{ application_name }}/templates/;
    }

    access_log off;
    error_log /var/log/nginx/{{ backend_server_name }}-error.log error;

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_path }}/;
    }

    # ACME-challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/_letsencrypt;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
